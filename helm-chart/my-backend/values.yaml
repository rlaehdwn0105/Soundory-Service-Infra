### Deployment
replicaCount: 2

image:
  repository: dongjukim123/soundory-be
  pullPolicy: IfNotPresent
  tag: 197

container:
  port: 8001

terminationGracePeriodSeconds: 60

resources:
  limits:
    memory: 512Mi
    cpu: 500m
  requests:
    memory: 256Mi
    cpu: 250m

#podSecurityContext:
#  runAsUser: 0
#  fsGroup: 3000

#securityContext:
#  allowPrivilegeEscalation: false
#  privileged: false
#  capabilities:
#    drop:
#      - ALL
#  readOnlyRootFilesystem: false



### toleration & affinity
nodeSelector: {}
tolerations:
  - key: "node"
    operator: "Equal"
    value: "service"
    effect: "NoSchedule"
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role
              operator: In
              values:
                - service

podAnnotations: {}

### Health Check
probes:
  liveness:
    enabled: true
    path: /health
    port: 8001
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 5
  readiness:
    enabled: true
    path: /health
    port: 8001
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 5


metrics:
  enabled: false
  path: /metrics

### HPA
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 18
  targetCPUUtilizationPercentage: 50

### Service (Production)
service:
  type: ClusterIP
  port: 80
  targetPort: 8001

### Service (Preview)
previewService:
  enabled: true
  port: 80
  targetPort: 8001
  type: ClusterIP

### Ingress (Production)
ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: soundory-group
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:880076045111:certificate/c2541962-fedf-4fb3-bb6b-72eec6191cd3
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/success-codes: '200,302'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    external-dns.alpha.kubernetes.io/hostname: kimdongju.site
  hosts:
    - host: kimdongju.site
      paths:
        - path: /api
          pathType: Prefix
        - path: /health
          pathType: Exact
  tls:
    - hosts:
        - kimdongju.site
### Ingress (Preview)
previewIngress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: soundory-group
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/success-codes: '200,302'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:880076045111:certificate/c2541962-fedf-4fb3-bb6b-72eec6191cd3
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    external-dns.alpha.kubernetes.io/hostname: preview.kimdongju.site
  hosts:
    - host: preview.kimdongju.site
      paths:
        - path: /api
          pathType: Prefix
        - path: /health
          pathType: Exact
  tls:
    - hosts:
        - preview.kimdongju.site

### ConfigMap
configMap:
  enabled: true
  data:
    DB_HOST: db-33rje8-kr.vpc-pub-cdb.ntruss.com
    DB_PORT: "3306"
    DB_NAME: kdj
    EMAIL: rlaehdwn0105@gmail.com
    SERVER_URL: http://kimdongju.site
    AWS_REGION: ap-northeast-2
    AWS_AUDIO_BUCKET: soundory-audio
    AWS_IMAGE_ORIGIN_BUCKET: soundory-origin
    AWS_IMAGE_RESIZED_BUCKET: soundory-resized
    AWS_AUDIO_BUCKET_URL: https://soundory-audio.s3.ap-northeast-2.amazonaws.com/
    AWS_IMAGE_ORIGIN_BUCKET_URL: https://soundory-origin.s3.ap-northeast-2.amazonaws.com/
    # 이름변경 필요
    AWS_IMAGE_RESIZED_BUCKET_URL: https://d1bkhpnpv1ny2t.cloudfront.net/
    CF_ACCESS_KEY_ID: KTWE520OTSGSX
    CF_PRIVATE_KEY_PATH: /app/src/keys/cloudfront-private-key.pem  
    NODE_ENV: production
    DIST_URL: https://de136mx4etflr.cloudfront.net

### Secret 
envFromSecret: sondory-secret

fileSecret:
  name: cloudfront-key-secret
  key: CF_PRIVATE_KEY
  mountPath: /app/src/keys/cloudfront-private-key.pem
  volumeName: cloudfront-key-volume

### Misc
pvc:
  enabled: false
  
serviceAccount:
  create: false
  annotations: {}
  name: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

pdb:
  enabled: false
  minAvailable: 1
