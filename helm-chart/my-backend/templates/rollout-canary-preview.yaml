apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "my-backend.fullname" . }}
  labels:
    {{- include "my-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      {{- include "my-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "my-backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: http
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            {{- if .Values.configMap.enabled }}
            - configMapRef:
                name: {{ .Release.Name }}-configmap
            {{- end }}
            {{- if .Values.envFromSecret }}
            - secretRef:
                name: {{ .Values.envFromSecret }}
            {{- end }}
          volumeMounts:
            - name: {{ .Values.fileSecret.volumeName }}
              mountPath: {{ .Values.fileSecret.mountPath }}
              subPath: {{ .Values.fileSecret.key }}
              readOnly: true
      volumes:
        - name: {{ .Values.fileSecret.volumeName }}
          secret:
            secretName: {{ .Values.fileSecret.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  strategy:
    canary:
      steps:
        - experiment:
            templates:
              - name: canary-preview
                specRef: canary
                selector:
                  matchLabels:
                    app: {{ .Chart.Name }}-preview
                metadata:
                  labels:
                    app: {{ .Chart.Name }}-preview
